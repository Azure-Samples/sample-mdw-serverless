{
	"name": "Process Factories Data bronze2silver with azure function",
	"properties": {
		"activities": [
			{
				"name": "GetNewDroppedFiles",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get CS from AKV",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFileName": "dropped_files.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "dropped_file_list",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Factory of Data Model 2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetNewDroppedFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetNewDroppedFiles').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Check if not Processed Model 2",
							"description": "The update of control file when an entry is processed is out-of-scope for this sample. Once an entry is processed, the control file must be updated. ",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(not(item().Processed), equals(item().DataModelName, 'data_model_2'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "split_by_date",
										"type": "AzureFunctionActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"functionName": "split_by_date",
											"method": "POST",
											"body": {
												"value": "@concat('{',\n        '\"file_name\"',':','\"',item().FileLocation,'/daily.zip\"', ',',\n        '\"source_container\"',':','\"',pipeline().parameters.source_container,'\"', ',',\n        '\"target_container\"',':','\"',pipeline().parameters.target_container,'\"', ',',\n        '\"source_cs\"',':','\"',activity('Get CS from AKV').output.value,'\"', ',',\n        '\"target_cs\"',':','\"',activity('Get CS from AKV').output.value,'\"',\n        '}'\n        )\n",
												"type": "Expression"
											}
										},
										"linkedServiceName": {
											"referenceName": "factories functions",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Factory of Data Model 1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetNewDroppedFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetNewDroppedFiles').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Check not if Processed Model 2",
							"description": "The update of control file when an entry is processed is out-of-scope for this sample. Once an entry is processed, the control file must be updated. ",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(not(item().Processed), equals(item().DataModelName, 'data_model_1'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "split_by_date_copy1",
										"type": "AzureFunctionActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"functionName": "split_by_date",
											"method": "POST",
											"body": {
												"value": "@concat('{',\n        '\"file_name\"',':','\"',item().FileLocation,'/daily.zip\"', ',',\n        '\"source_container\"',':','\"',pipeline().parameters.source_container,'\"', ',',\n        '\"target_container\"',':','\"',pipeline().parameters.target_container,'\"', ',',\n        '\"source_cs\"',':','\"',activity('Get CS from AKV').output.value,'\"', ',',\n        '\"target_cs\"',':','\"',activity('Get CS from AKV').output.value,'\"',\n        '}'\n        )\n",
												"type": "Expression"
											}
										},
										"linkedServiceName": {
											"referenceName": "factories functions",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get CS from AKV",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://medalionakv12.vault.azure.net/secrets/medalion-acc-cs?api-version=7.0",
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"target_container": {
				"type": "string",
				"defaultValue": "silver"
			},
			"source_container": {
				"type": "string",
				"defaultValue": "bronze"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-07-24T14:05:20Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}